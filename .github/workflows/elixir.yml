name: Test and Build image

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: elixir:1.12-alpine

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: pr_user
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Install APK packages
      run: |
        apk update
        apk add --virtual build-dependencies build-base
        apk add bash nodejs npm inotify-tools openssl

    - uses: actions/checkout@v1

    - name: Install Dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get

    - name: Run Tests
      run: mix test
      env:
        # use postgres for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' && github.event.action == 'created'

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

    - uses: actions/checkout@v1

    - name: Publish to Registry
      if: github.ref == 'refs/heads/master'
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: errkk/playrequest/pr
        username: _
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        dockerfile: Dockerfile
        tag_semver: true
